{"version":3,"file":"static/js/RegisterPage.458c0257.chunk.js","mappings":"8QACA,EAAwB,wBAAxB,EAAuD,uBAAvD,EAAqF,uBAArF,EAAmH,uBAAnH,EAAiJ,uBAAjJ,EAAgL,wB,mBCyHhL,EAhHiB,WACf,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAAcC,SACzBC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAEpBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACxB,IAAMC,EAAQD,EAAEE,OAED,SAAfD,EAAMhB,MAAmBC,EAAQe,EAAME,OACxB,UAAfF,EAAMhB,MAAoBG,EAASa,EAAME,OAC1B,aAAfF,EAAMhB,MAAuBK,EAAYW,EAAME,QAG3CC,GAAQC,EAAAA,EAAAA,GAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,MAAO,UACPC,KAAM,SACNC,KAAM,UACNC,aAAc,QAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAmBpB,OACE,iCACE,eAAIE,UAAWC,EAAf,SAAsC,WAAbvB,EAAwB,UAAY,aAC7D,kBAAMwB,SAjBW,SAAAf,GAGnB,GAFAA,EAAEgB,iBAEe,cAAbzB,EAA0B,CAC5B,GAAa,KAATN,GAAyB,KAAVE,GAA6B,KAAbE,EAAiB,OACpDQ,GAASoB,EAAAA,EAAAA,IAAkB,CAAEhC,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAG5C,GAAiB,WAAbE,EAAuB,CACzB,GAAc,KAAVJ,GAA6B,KAAbE,EAAiB,OACrCQ,GAASqB,EAAAA,EAAAA,IAAe,CAAE/B,MAAAA,EAAOE,SAAAA,OAOHwB,UAAWC,EAAzC,WACE,UAACK,EAAA,EAAD,CAAef,MAAOA,EAAtB,UACgB,cAAbb,IACC,SAAC6B,EAAA,EAAD,CACEC,MAAM,OACNpC,KAAK,OACLkB,MAAOlB,EACPqC,SAAUvB,EACVwB,QAAQ,WACRC,OAAO,SACPC,UAAQ,KAGZ,SAACL,EAAA,EAAD,CACEnC,KAAK,QACLkB,MAAOhB,EACPmC,SAAUvB,EACV2B,KAAK,QACLL,MAAM,QACNE,QAAQ,WACRC,OAAO,SACPC,UAAQ,KAEV,SAACL,EAAA,EAAD,CACEM,KAAK,WACLzC,KAAK,WACLkB,MAAOd,EACPiC,SAAUvB,EACV4B,UAAW,EACXN,MAAM,WACNE,QAAQ,WACRC,OAAO,SACPC,UAAQ,QAGZ,SAACG,EAAA,EAAD,CAAQL,QAAQ,WAAWG,KAAK,SAAhC,SACgB,cAAbnC,EAA2B,WAAa,UAE1CG,IAAS,cAAGmB,UAAWC,EAAd,6CAEZ,gBAAKD,UAAWC,EAAhB,SACgB,WAAbvB,GACC,iCACE,cAAGsB,UAAWC,EAAd,qCACA,SAAC,KAAD,CAAMe,GAAG,YAAYhB,UAAWC,EAAhC,yBAKF,iCACE,cAAGD,UAAWC,EAAd,sCACA,SAAC,KAAD,CAAMe,GAAG,SAAShB,UAAWC,EAA7B,+B,mDC3GZ,UAJqB,WACnB,OAAO,SAAC,IAAD","sources":["webpack://react-homework-template/./src/components/AuthForm/AuthForm.module.css?9658","components/AuthForm/AuthForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"AuthForm_title__nrVeh\",\"form\":\"AuthForm_form__N+Fyz\",\"info\":\"AuthForm_info__9av54\",\"text\":\"AuthForm_text__iaP49\",\"link\":\"AuthForm_link__3I+HY\",\"error\":\"AuthForm_error__cNFpJ\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport { loginUserThunk, registerUserThunk } from 'redux/user/userOperations';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport s from './AuthForm.module.css';\nimport { getStateError } from 'redux/user/userSelector';\n\nconst AuthForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const location = useLocation().pathname;\n  const error = useSelector(getStateError);\n\n  const dispatch = useDispatch();\n\n  const handleChangeInput = e => {\n    const input = e.target;\n\n    input.name === 'name' && setName(input.value);\n    input.name === 'email' && setEmail(input.value);\n    input.name === 'password' && setPassword(input.value);\n  };\n\n  const theme = createTheme({\n    palette: {\n      primary: {\n        light: '#757ce8',\n        main: 'orange',\n        dark: '#002884',\n        contrastText: '#fff',\n      },\n      secondary: {\n        light: '#ff7961',\n        main: '#f44336',\n        dark: '#ba000d',\n        contrastText: '#000',\n      },\n    },\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (location === '/register') {\n      if (name === '' || email === '' || password === '') return;\n      dispatch(registerUserThunk({ name, email, password }));\n    }\n\n    if (location === '/login') {\n      if (email === '' || password === '') return;\n      dispatch(loginUserThunk({ email, password }));\n    }\n  };\n\n  return (\n    <>\n      <h2 className={s.title}>{location === '/login' ? 'Sign in' : 'Sign up'}</h2>\n      <form onSubmit={handleSubmit} className={s.form}>\n        <ThemeProvider theme={theme}>\n          {location === '/register' && (\n            <TextField\n              label=\"Name\"\n              name=\"name\"\n              value={name}\n              onChange={handleChangeInput}\n              variant=\"standard\"\n              margin=\"normal\"\n              required\n            />\n          )}\n          <TextField\n            name=\"email\"\n            value={email}\n            onChange={handleChangeInput}\n            type=\"email\"\n            label=\"Email\"\n            variant=\"standard\"\n            margin=\"normal\"\n            required\n          />\n          <TextField\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChangeInput}\n            minLength={7}\n            label=\"Password\"\n            variant=\"standard\"\n            margin=\"normal\"\n            required\n          />\n        </ThemeProvider>\n        <Button variant=\"outlined\" type=\"submit\">\n          {location === '/register' ? 'Register' : 'Login'}\n        </Button>\n        {error && <p className={s.error}>Incorrect password or email</p>}\n      </form>\n      <div className={s.info}>\n        {location === '/login' ? (\n          <>\n            <p className={s.text}>Don't have an account?</p>\n            <Link to=\"/register\" className={s.link}>\n              Sign up\n            </Link>\n          </>\n        ) : (\n          <>\n            <p className={s.text}>Do you have an account?</p>\n            <Link to=\"/login\" className={s.link}>\n              Sign in\n            </Link>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\nexport default AuthForm;\n","import AuthForm from 'components/AuthForm/AuthForm';\n\nconst RegisterPage = () => {\n  return <AuthForm />;\n};\n\nexport default RegisterPage;\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","location","useLocation","pathname","error","useSelector","getStateError","dispatch","useDispatch","handleChangeInput","e","input","target","value","theme","createTheme","palette","primary","light","main","dark","contrastText","secondary","className","s","onSubmit","preventDefault","registerUserThunk","loginUserThunk","ThemeProvider","TextField","label","onChange","variant","margin","required","type","minLength","Button","to"],"sourceRoot":""}